{"remainingRequest":"/Users/arpitsharma/Documents/my-projects/VueQuiz/quiz/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/arpitsharma/Documents/my-projects/VueQuiz/quiz/src/components/QuestionBox.vue?vue&type=style&index=0&id=62ab2b85&scoped=true&lang=css&","dependencies":[{"path":"/Users/arpitsharma/Documents/my-projects/VueQuiz/quiz/src/components/QuestionBox.vue","mtime":1590477839547},{"path":"/Users/arpitsharma/Documents/my-projects/VueQuiz/quiz/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/arpitsharma/Documents/my-projects/VueQuiz/quiz/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/arpitsharma/Documents/my-projects/VueQuiz/quiz/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/arpitsharma/Documents/my-projects/VueQuiz/quiz/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/arpitsharma/Documents/my-projects/VueQuiz/quiz/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoubGlzdC1ncm91cCB7CiAgbWFyZ2luLWJvdHRvbTogMTVweDsKfQoKLmxpc3QtZ3JvdXAtaXRlbTpob3ZlciB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2VlZTsKICBjdXJzb3I6IHBvaW50ZXI7Cn0KCi5zZWxlY3RlZCB7CiAgYmFja2dyb3VuZC1jb2xvcjogbGlnaHRibHVlOwp9CgouY29ycmVjdCB7CiAgYmFja2dyb3VuZC1jb2xvcjogZ3JlZW47Cn0KCi5pbmNvcnJlY3QgewogIGJhY2tncm91bmQtY29sb3I6IHJlZDsKfQouYnRuIHsKICBtYXJnaW46IDAgNXB4Owp9Cg=="},{"version":3,"sources":["QuestionBox.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkGA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"QuestionBox.vue","sourceRoot":"src/components","sourcesContent":["<template>\n  <div>\n    <b-jumbotron>\n      <template v-slot:lead>{{currentQuestion.question}}</template>\n\n      <hr class=\"my-4\" />\n      <b-list-group>\n        <b-list-group-item\n          v-for=\"(answer, index) in shuffledAnswers\"\n          :key=\"index\"\n          @click=\"selectItem(index)\"\n          :class=\"answerClass(index)\"\n        >{{answer}}</b-list-group-item>\n      </b-list-group>\n\n      <b-button \n        @click=\"submitAnswer\"\n        :disabled=\"selectedIndex === null || answered\"\n        variant=\"primary\">Submit</b-button>\n      <b-button @click=\"next\" variant=\"success\">Next</b-button>\n    </b-jumbotron>\n  </div>\n</template>\n\n<script>\nimport _ from \"lodash\";\nexport default {\n  props: {\n    currentQuestion: Object,\n    next: Function,\n    increment: Function\n  },\n  data() {\n    return {\n      selectedIndex: null,\n      correctIndex: null,\n      shuffledAnswers: [],\n      answered: false\n    };\n  },\n  methods: {\n    selectItem(index) {\n      this.selectedIndex = index;\n    },\n\n    shuffleAnswers() {\n      let answers = [\n        ...this.currentQuestion.incorrect_answers,\n        this.currentQuestion.correct_answer\n      ];\n      this.shuffledAnswers = _.shuffle(answers);\n      this.correctIndex = this.shuffledAnswers.indexOf(this.currentQuestion.correct_answer)\n    },\n    submitAnswer(){\n      let isCorrect = false\n      if(this.selectedIndex === this.correctIndex){\n        isCorrect = true\n      }\n      this.answered = true\n      this.increment(isCorrect)\n    },\n\n    answerClass(index){\n        let answerClass = ''\n        if(!this.answered && this.selectedIndex === index){\n          answerClass = 'selected'\n        } \n        else if(this.answered && this.correctIndex === index){\n          answerClass = 'correct'\n        }\n        else if(this.answered && this.selectedIndex === index && this.correctIndex !== index){\n          answerClass = 'incorrect'\n        }\n        return answerClass\n    }\n  },\n  computed: {\n    answers() {\n      return [\n        ...this.currentQuestion.incorrect_answers,\n        this.currentQuestion.correct_answer\n      ];\n    }\n  },\n  watch: {\n    currentQuestion: {\n      immediate: true,\n      handler() {\n        this.selectedIndex = null\n        this.shuffleAnswers()\n        this.answered = false\n      }\n    }\n  }\n};\n</script>\n\n<style scoped>\n.list-group {\n  margin-bottom: 15px;\n}\n\n.list-group-item:hover {\n  background-color: #eee;\n  cursor: pointer;\n}\n\n.selected {\n  background-color: lightblue;\n}\n\n.correct {\n  background-color: green;\n}\n\n.incorrect {\n  background-color: red;\n}\n.btn {\n  margin: 0 5px;\n}\n</style>"]}]}